# Работа с потоками
pthread_create,
pthread_detach, pthread_join,

# Для синхронизации доступа
pthread_mutex_init, pthread_mutex_destroy, pthread_mutex_lock,
pthread_mutex_unlock 

Создание нового потока
int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
Аргументы:
1. thread:			Указатель на переменную типа pthread_t, в которую будет записан идентификатор созданного потока
2. attr:			Указатель на структуру атрибутов потока. Если не нужны спец атрибуты, передается NULL
3. start_routine:	Указатель на ф-ю, которая будет выполнена в потоке. Эта ф-я должна принимать один аргумент типа void* и возвращать указатель на void
4. arg:				Аргумент, который будет передан в ф-ю start_routine. Это может быть любой указатель


Отсоединение потока (после отсоединения поток автоматически освобождает свои ресурсы, как только завершит выполнение, и не нужно ожидать завершение 
с помощью pthread_join). То есть поток отсоединяется от родительского и завершает свое выполнение, но возвращаемое значение получить не удасться
int pthread_detach(pthread_t thread);
Аргумент:
1. thread:			Идентификатор потока, который нужно отсоединить


Ожидание завершения потока
pthread_join исп для того, чтобы ожидать завершение потока. Она блокирует вызывающий поток до тех пор, пока поток, указанный в качестве аргумента,
не завершит свою работу. Чтобы получить резульат завершения потока (его возвращаемое значение), это можно сделать через второй аргумент
int pthread_join(pthread_t thread, void **retval);
Аргументы:
1. thread:			Идентификатор потока, завершение которого нужно дождатся
2. retval:			Указатель на переменную, в которую будет записан резульат работы потока. (если результат не нужен, передаем NULL)


Инициализация мьютекса (pthread_mutex_init)
Мьютексы исп для синхронизации доступа к общим ресурсам между потоками. pthread_mutex_init инициализирует мьютекс, делая его готовым к исп
int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *attr);
Аргументы:
1. mutex:			Указатель на мьютекс, который нужно инициализировать
2. attr:			Указатель на структуру атрибутов мьютекса. Обычно передаются NULL, если не нужны спец атрибуты
Возвращаемое значение:
- Возвращает 0 при успешной инициализации, в противном случае - код ошибки


Уничтожение мьютекса (pthread_mutex_destroy)
Когда мьютекс больше не нужен, важно его уничтожить, чтобы освободить ресурсы
int pthread_mutex_destroy(pthread_mutex_t *mutex);
Аргументы:
1. mutex:			Указатель на мьютекс, который нужно уничтожить
Возвращаемое значение:
- Возвращает 0 при успешной инициализации, в противном случае - код ошибки

Захват мьютекса (pthread_mutex_lock)
Эта ф-я исп для того, чтобы потоки могли захватывать мьютекс перед тем, как начать работать с разделяемымы данными. Когда поток захватывает
мьютекс, другие потоки, пытающиеся захватить этот же мьютекс, будут заблокированы, пока первый поток не освободит мьютекс
int pthread_mutex_lock(pthread_mutex_t *mutex);
Аргументы:
1. mutex:			Указатель на мьютекс, который нужно захватить
Возвращаемое значение:
- Возвращает 0 при успешной инициализации, в противном случае - код ошибки


Освобождение мьютекса (pthread_mutex_unlock)
Когда поток завершил работу с разделяемыми данными, он должен освободить мьютекс, чтобы другие потоки могли захватить его
int pthread_mutex_unlock(pthread_mutex_t *mutex);
Аргумент:
1. mutex:			Указатель на мьютекс, который нужно освободить
Возвращаемое значение:
- Возвращает 0 при успешной инициализации, в противном случае - код ошибки